{"version":3,"sources":["components/Home Screen/Header.js","components/Home Screen/Slider.js","components/Home Screen/JobCard.js","components/Home Screen/ProfileCard.js","components/Home Screen/Body.js","components/Home Screen/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","avatar","margin","bigAvatar","width","height","Header","classes","className","Avatar","alt","src","path","mdiWalletOutline","size","color","mdiStar","Slider","showArrows","autoPlay","infiniteLoop","showThumbs","showStatus","JobCard","mdiDomain","mdiClockOutline","mdiCash","mdiAccountMultiplePlus","mdiBriefcase","mdiCertificateOutline","mdiGift","mdiAccountCheck","percent","status","theme","success","Button","variant","button","ProfileCard","Body","Divider","HomeScreen","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8a61914.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Icon from '@mdi/react'\r\nimport { mdiWalletOutline } from '@mdi/js';\r\nimport { mdiStar } from '@mdi/js';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        margin: 5,\r\n    },\r\n    bigAvatar: {\r\n        margin: 0,\r\n        width: 70,\r\n        height: 70,\r\n    },\r\n});\r\n\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"header-container\">\r\n                    <div className=\"grid-container\">\r\n                        <div className=\"grid-item\">\r\n                            <div>\r\n                                <span className=\"header\">Hi Ramesh Gupta</span>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <span className=\"sub-header\">Welcome to Pick My Work</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid-item\">\r\n                            <Avatar alt=\"user-profile\" src=\"https://i.ibb.co/SN6Yknh/profile.jpg\" className={classes.bigAvatar} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"wallet-container\">\r\n                        <div className=\"grid-container\">\r\n                            <div className=\"grid-item\">\r\n                                <div className=\"grid-container2\">\r\n                                    <div className=\"grid-item\">\r\n                                        <Icon path={mdiWalletOutline} size={1.5} color=\"white\" />\r\n                                    </div>\r\n                                    <div className=\"grid-item\">\r\n                                        <div className=\"icon-text\">\r\n                                        <span>â‚¹500</span>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid-item\">\r\n                            <div className=\"grid-container2\">\r\n                                    <div className=\"grid-item\">\r\n                                        <Icon path={mdiStar} size={1.5} color=\"white\" />\r\n                                    </div>\r\n                                    <div className=\"grid-item\">\r\n                                        <div className=\"icon-text\">\r\n                                        <span>4.4</span>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\n\r\nfunction Slider() {\r\nreturn (\r\n    <div>\r\n        <div>\r\n            <span></span>\r\n        </div>\r\n        <Carousel showArrows={false} autoPlay={true} infiniteLoop={true} showThumbs={false} showStatus={false} width={\"100%\"}>\r\n                <div>\r\n                    <img src=\"https://images.pexels.com/photos/417005/pexels-photo-417005.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" />\r\n                    \r\n                </div>\r\n                <div>\r\n                    <img src=\"https://images.pexels.com/photos/417005/pexels-photo-417005.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" />\r\n                    \r\n                </div>\r\n                <div>\r\n                    <img src=\"https://images.pexels.com/photos/417005/pexels-photo-417005.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" />\r\n                    \r\n                </div>\r\n            </Carousel>\r\n        </div>\r\n);\r\n}\r\nexport default Slider;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Progress } from 'react-sweet-progress';\r\nimport \"react-sweet-progress/lib/style.css\";\r\nimport Icon from '@mdi/react'\r\nimport { mdiDomain } from '@mdi/js';\r\nimport { mdiClockOutline } from '@mdi/js';\r\nimport { mdiBriefcase } from '@mdi/js';\r\nimport { mdiAccountMultiplePlus } from '@mdi/js';\r\nimport { mdiCash } from '@mdi/js';\r\nimport { mdiCertificateOutline } from '@mdi/js';\r\nimport { mdiGift } from '@mdi/js';\r\nimport { mdiAccountCheck } from '@mdi/js';\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        margin: 5,\r\n    },\r\n    bigAvatar: {\r\n        margin: 0,\r\n        width: 90,\r\n        height: 90,\r\n    },\r\n});\r\n\r\n\r\nfunction JobCard() {\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div className=\"job-card\">\r\n            <div className=\"grid-container\">\r\n                <div className=\"grid-item\">\r\n                    <Avatar alt=\"company-logo\" src=\"https://blog.hubspot.com/hubfs/image8-2.jpg\" className={classes.bigAvatar} />\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div className=\"job-details\">\r\n                        <div className=\"grid-item\">\r\n                            <span className=\"job-title\">Sales Agent</span>\r\n                        </div>\r\n                        <div className=\"job-text\">\r\n                            <div className=\"grid-item\">\r\n                                <Icon path={mdiDomain} size={1} color=\"white\" />\r\n                            </div>\r\n                            <div className=\"grid-item\">\r\n                                <div className=\"icon-text\">\r\n                                    <span>Google</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"grid-item\">\r\n                                <Icon path={mdiClockOutline} size={1} color=\"white\" />\r\n                            </div>\r\n                            <div className=\"grid-item\">\r\n                                <div className=\"icon-text\">\r\n                                    <span>3 Days Left to Apply</span>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"grid-item\">\r\n                                <Icon path={mdiCash} size={1} color=\"white\" />\r\n                            </div>\r\n                            <div className=\"grid-item\">\r\n                                <div className=\"icon-text\">\r\n                                    <span>Earn up to â‚¹ 3,00,000 Monthly</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"job-perks\">\r\n                <div className=\"grid-item\">\r\n                    <div className=\"perks-detail\">\r\n                        <Icon path={mdiAccountMultiplePlus} size={1} color=\"white\" />\r\n                        <div className=\"perks-text\">\r\n                            <span>300+ Hired</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div className=\"perks-detail\">\r\n                        <Icon path={mdiBriefcase} size={1} color=\"white\" />\r\n                        <div className=\"perks-text\">\r\n                            <span>250 Vacancies</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div className=\"perks-detail\">\r\n                        <Icon path={mdiCertificateOutline} size={1} color=\"white\" />\r\n                        <div className=\"perks-text\">\r\n                            <span>Certified Training</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <div className=\"perks-detail\">\r\n                        <Icon path={mdiGift} size={1} color=\"white\" />\r\n                        <div className=\"perks-text\">\r\n                            <span>Multiple Perks</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"profile-status\">\r\n                <div className=\"grid-container\">\r\n\r\n                    <div className=\"grid-item\">\r\n                        <Icon path={mdiAccountCheck} size={1} color=\"white\" />\r\n                    </div>\r\n                    <div className=\"grid-item\">\r\n                        <div className=\"icon-text\">\r\n                            <span>Your Profile Mathes 4/5</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <Progress percent={80} status=\"success\" theme={{\r\n                        success: {\r\n                            color: '#977cff'\r\n                        }\r\n                    }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"job-button\">\r\n                <div className=\"grid-item\">\r\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                        Apply Now\r\n                        </Button>\r\n                </div>\r\n                <div className=\"grid-item\">\r\n                    <Button variant=\"contained\" color=\"secondary\" className={classes.button}>\r\n                        Know More\r\n                         </Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default JobCard;\r\n","import React from 'react';\r\n\r\n\r\nfunction ProfileCard() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div>\r\n        \r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","import React from 'react';\r\nimport JobCard from './JobCard';\r\nimport ProfileCard from './ProfileCard'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nfunction Body() {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"body-heading\">\r\n                    <span>What job can we help you find?</span>\r\n                </div>\r\n                < JobCard />\r\n            </div>\r\n            <Divider />\r\n            <div className=\"container\">\r\n                < JobCard />\r\n            </div>\r\n            <Divider />\r\n            <div className=\"container\">\r\n                < ProfileCard />\r\n            </div>\r\n            <div className=\"container\">\r\n                < JobCard />\r\n            </div>\r\n            <Divider />\r\n            <div className=\"container\">\r\n                < JobCard />\r\n            </div>\r\n            <Divider />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Slider from './Slider';\r\nimport Body from './Body';\r\n\r\nfunction HomeScreen() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Slider />\r\n      <Body />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\nimport './App.css';\nimport HomeScreen from './components/Home Screen/HomeScreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomeScreen />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
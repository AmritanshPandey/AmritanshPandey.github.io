{"version":3,"sources":["ListItems.js","SocialMedia.js","Body.js","ContentStore.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","ListItem","button","className","ListItemIcon","useStyles","makeStyles","theme","margin","spacing","padding","text","textAlign","SocialMedia","classes","IconButton","Copyright","Typography","variant","color","align","Date","getFullYear","bigAvatar","width","height","heroContent","backgroundColor","palette","background","paper","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","display","flexDirection","cardMedia","cardContent","flexGrow","footer","paddingLeft","cards","Body","Fragment","CssBaseline","Container","maxWidth","component","gutterBottom","paragraph","Link","href","Grid","container","justify","item","Button","map","key","xs","sm","md","Card","CardContent","CardHeader","avatar","Avatar","alt","src","title","subheader","CardActions","size","greenAvatar","marginLeft","largeIcon","root","toolbarIcon","alignItems","justifyContent","mixins","toolbar","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","fixedHeight","ContentStore","React","useState","open","AppBar","position","clsx","Toolbar","edge","iconStyle","noWrap","Badge","badgeContent","Drawer","drawerPaper","List","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sbAQaA,EACX,6BACE,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAU,uBACzB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgBD,UAAU,4BAG9B,kBAACF,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAYD,UAAU,eAG1B,kBAACF,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgBD,UAAU,gB,qJCb5BE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,IAExBC,QAAS,CACPA,QAASH,EAAME,QAAQ,EAAG,IAE5BE,KAAM,CACJC,UAAW,cA4BAC,MAxBf,WACE,IAAMC,EAAUT,IAEhB,OACE,yBAAKF,UAAWW,EAAQH,MACpB,kBAACI,EAAA,EAAD,CAAaZ,UAAWW,EAAQN,QAChC,kBAAC,IAAD,CAASL,UAAU,cAEnB,kBAACY,EAAA,EAAD,CAAaZ,UAAWW,EAAQN,QAChC,kBAAC,IAAD,CAAWL,UAAU,cAErB,kBAACY,EAAA,EAAD,CAAaZ,UAAWW,EAAQN,QAChC,kBAAC,IAAD,CAAWL,UAAU,cAGrB,kBAACY,EAAA,EAAD,CAAaZ,UAAWW,EAAQN,QAChC,kBAAC,IAAD,CAAUL,UAAU,gBCtB5B,SAASa,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,mBAAgB,IAAIC,MAAOC,cAC3B,KAFH,+BAGgC,6BAC7B,IAJH,wBAI4B,6BAAM,8BAMtC,IAAMjB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCgB,UAAW,CACTf,OAAQ,GACRgB,MAAO,GACPC,OAAQ,IAGVC,YAAa,CACXC,gBAAiBpB,EAAMqB,QAAQC,WAAWC,MAC1CpB,QAASH,EAAME,QAAQ,EAAG,EAAG,IAE/BsB,YAAa,CACXC,UAAWzB,EAAME,QAAQ,IAE3BwB,SAAU,CACRC,WAAY3B,EAAME,QAAQ,GAC1B0B,cAAe5B,EAAME,QAAQ,IAE/B2B,KAAM,CACJX,OAAQ,OACRY,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTL,WAAY,UAEdM,YAAa,CACXC,SAAU,GAEZC,OAAQ,CACNf,gBAAiBpB,EAAMqB,QAAQC,WAAWC,MAC1CpB,QAASH,EAAME,QAAQ,GACvBkC,YAAa,YAIXC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA8ExBC,MA5Ef,WACE,IAAM/B,EAAUT,IAEhB,OACE,kBAAC,IAAMyC,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,8BAEE,yBAAK5C,UAAWW,EAAQY,aACtB,kBAACsB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAChC,EAAA,EAAD,CAAYiC,UAAU,KAAKhC,QAAQ,KAAKE,MAAM,OAAOD,MAAM,cAAcgC,cAAY,GAArF,iBAGA,kBAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,OAAOgC,WAAS,EAACjD,UAAU,YAA1D,oFAGA,kBAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,OAAOgC,WAAS,GAA/C,sOAEqH,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAX,kEAGrH,yBAAKnD,UAAWW,EAAQiB,aACtB,kBAACwB,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,EAAGgD,QAAQ,QAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAQzC,QAAQ,WAAWC,MAAM,WAAjC,8BASV,kBAAC6B,EAAA,EAAD,CAAW7C,UAAWW,EAAQmB,SAAUgB,SAAS,MAC/C,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAAC/C,QAAS,GACtBmC,EAAMgB,KAAI,SAAAxB,GAAI,OACb,kBAACmB,EAAA,EAAD,CAAMG,MAAI,EAACG,IAAKzB,EAAM0B,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACvC,kBAACC,EAAA,EAAD,CAAM9D,UAAWW,EAAQsB,MAEvB,kBAAC8B,EAAA,EAAD,CAAa/D,UAAWW,EAAQ0B,aAC9B,kBAAC2B,EAAA,EAAD,CACEC,OACE,kBAACC,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,2CAA2CpE,UAAWW,EAAQS,YAE7FiD,MAAM,iBACNC,UAAU,mBAEZ,kBAACxD,EAAA,EAAD,4HAIF,kBAACyD,EAAA,EAAD,KACE,kBAACf,EAAA,EAAD,CAAQgB,KAAK,QAAQzD,QAAQ,WAAWC,MAAM,WAA9C,kBAWd,4BAAQhB,UAAWW,EAAQ4B,QACzB,kBAAC,EAAD,MACA,kBAAC1B,EAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,SAASD,MAAM,gBAAgB+B,UAAU,KAC9E,kBAACG,EAAA,EAAD,uBADD,SACkC,kBAACA,EAAA,EAAD,yBADlC,OACmE,kBAACA,EAAA,EAAD,0BADnE,OACqG,kBAACA,EAAA,EAAD,uB,0jBCjH7G,IAEMhD,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCqE,YAAa,CACXC,WAAY,GACZ1D,MAAO,OACPQ,gBAAiB,WAEnBmD,UAAW,CACTtD,MAAO,GACPC,OAAQ,IAEVsD,KAAM,CACJ1C,QAAS,QAGX2C,YAAY,GAAD,CACT3C,QAAS,OACT4C,WAAY,SACZC,eAAgB,WAChBxE,QAAS,SACNH,EAAM4E,OAAOC,SAElBC,OAAQ,CACNC,OAAQ/E,EAAM+E,OAAOC,OAAS,EAC9BC,WAAYjF,EAAMkF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQpF,EAAMkF,YAAYE,OAAOC,MACjCC,SAAUtF,EAAMkF,YAAYI,SAASC,iBAGzCC,YAAa,CACXlB,WA/BgB,GAgChBrD,MAAM,aACNgE,WAAYjF,EAAMkF,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQpF,EAAMkF,YAAYE,OAAOC,MACjCC,SAAUtF,EAAMkF,YAAYI,SAASG,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChB9D,QAAS,QAEXmC,MAAO,CACL/B,SAAU,GAGZ2D,iBAAiB,aACfC,UAAW,SACXb,WAAYjF,EAAMkF,YAAYC,OAAO,QAAS,CAC5CC,OAAQpF,EAAMkF,YAAYE,OAAOC,MACjCC,SAAUtF,EAAMkF,YAAYI,SAASC,gBAEvCtE,MAAOjB,EAAME,QAAQ,IACpBF,EAAM+F,YAAYC,GAAG,MAAQ,CAC5B/E,MAAOjB,EAAME,QAAQ,KAGzB+F,aAAcjG,EAAM4E,OAAOC,QAC3BqB,QAAS,CACPhE,SAAU,EACVhB,OAAQ,QACRiF,SAAU,QAEZlD,UAAW,CACTtB,WAAY3B,EAAME,QAAQ,GAC1B0B,cAAe5B,EAAME,QAAQ,IAG/BkG,YAAa,CACXlF,OAAQ,SAsDGmF,OAlDf,WACE,IAAM9F,EAAUT,KADM,EAENwG,IAAMC,UAAS,GAAxBC,EAFe,oBAOtB,OACE,yBAAK5G,UAAWW,EAAQiE,MACtB,kBAAChC,EAAA,EAAD,MACA,kBAACiE,EAAA,EAAD,CAAQC,SAAS,WAAW9G,UAAW+G,YAAKpG,EAAQuE,OAAQvE,EAAQiF,cAClE,kBAACoB,EAAA,EAAD,CAAShH,UAAWW,EAAQsE,SAC1B,kBAACrE,EAAA,EAAD,CACEqG,KAAK,QACLjG,MAAM,UACNkG,UAAWvG,EAAQgE,YAGrB,kBAAC7D,EAAA,EAAD,CAAYiC,UAAU,KAAKhC,QAAQ,KAAKC,MAAM,UAAUmG,QAAM,EAACnH,UAAWW,EAAQ0D,OAChF,yBAAKD,IAAI,+CAA+CD,IAAI,OAAOnE,UAAU,UAE/E,kBAACY,EAAA,EAAD,CAAYI,MAAM,WAChB,kBAACoG,EAAA,EAAD,CAAOC,aAAc,EAAGrG,MAAM,aAC5B,kBAAC,IAAD,QAGJ,kBAACkD,EAAA,EAAD,CAAQlE,UAAWW,EAAQ8D,aAA3B,QAGJ,kBAAC6C,EAAA,EAAD,CACEvG,QAAQ,YACRJ,QAAS,CACPgB,MAAOoF,YAAKpG,EAAQ4G,cAEtBX,KAAMA,GAGN,kBAACY,EAAA,EAAD,KAAO3H,IAGT,0BAAMG,UAAWW,EAAQ2F,SACvB,yBAAKtG,UAAWW,EAAQ0F,eACxB,kBAAC,EAAD,SC5HOoB,OARf,WACE,OACE,6BACC,kBAAC,GAAD,QCKeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c6439e81.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport StorefrontIcon from '@material-ui/icons/Storefront';\r\n\r\n  \r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button className=\"Mui-selected-border\">\r\n      <ListItemIcon>\r\n        <DashboardIcon  className=\"Mui-selected big-icon\"/>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <SearchIcon className=\"big-icon\" />\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <StorefrontIcon className=\"big-icon\" />\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    \r\n  </div>\r\n);\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Facebook from '@material-ui/icons/Facebook';\r\nimport Twitter from '@material-ui/icons/Twitter';\r\nimport Instagram from '@material-ui/icons/Instagram';\r\nimport LinkedIn from '@material-ui/icons/LinkedIn';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  text: {\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\nfunction SocialMedia() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.text}>\r\n        <IconButton  className={classes.margin}>\r\n        <Twitter className=\"big-icon\" />    \r\n        </IconButton>\r\n        <IconButton  className={classes.margin}>\r\n        <LinkedIn  className=\"big-icon\" />\r\n        </IconButton>\r\n        <IconButton  className={classes.margin}>\r\n        <Instagram className=\"big-icon\" />\r\n        </IconButton>\r\n        \r\n        <IconButton  className={classes.margin}>\r\n        <Facebook className=\"big-icon\" />\r\n        </IconButton>\r\n         \r\n      </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default SocialMedia","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport SocialMedia from './SocialMedia';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}{new Date().getFullYear()}\r\n      {'. '}\r\n        White Panda Media Pvt. Ltd. <br />\r\n      {' '} All rights reserved <br /><br />\r\n      \r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n    paddingLeft: \"91px\",\r\n  },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nfunction Body() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h3\" align=\"left\" color=\"textPrimary\" gutterBottom>\r\n              Content Store\r\n            </Typography>\r\n            <Typography variant=\"h4\" align=\"left\" paragraph className=\"TextTeal\">\r\n              Got bulk orders or almost similar orders? Fill the order brief in an excel sheet\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"left\" paragraph>\r\n              If you're wondering about an easy way to place orders large numbers, we provide a way customized just for that.\r\n              Download our excel sheet, and fill the order brief in the prescribed format and submit. In case you need any help, <Link href=\"\">we\r\n              are just a click away to assist you in placing your order.</Link>\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"left\">\r\n                <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    Order via Excel Sheet\r\n                  </Button>\r\n                </Grid>\r\n\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          <Grid container spacing={4}>\r\n            {cards.map(card => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n\r\n                  <CardContent className={classes.cardContent}>\r\n                    <CardHeader\r\n                      avatar={\r\n                        <Avatar alt=\"Remy Sharp\" src=\"https://i.ibb.co/PjnCNb2/placeholder.jpg\" className={classes.bigAvatar} />\r\n                      }\r\n                      title=\"Blog / Article\"\r\n                      subheader=\"from â¹500\"\r\n                    />\r\n                    <Typography>\r\n                      Typically 400-450 words, ae ebook is perfect for your target audience ranging from prospective customers to users.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" variant=\"outlined\" color=\"primary\">\r\n                      Order\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <SocialMedia />\r\n        <Copyright />\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n         <Link>Privacy Policy</Link>   |  <Link>Terms of Service</Link> |  <Link>Service Agreement</Link>  | <Link>Contact us</Link>\r\n        </Typography>\r\n\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Body","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems } from './ListItems';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Body from './Body';\r\n\r\n\r\n\r\n\r\nconst drawerWidth = 70;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  greenAvatar: {\r\n    marginLeft: 10,\r\n    color: '#fff',\r\n    backgroundColor: '#b3e880',\r\n  },\r\n  largeIcon: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  \r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100%)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  \r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(7),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n \r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nfunction ContentStore() {\r\n  const classes = useStyles();\r\n  const [open ] = React.useState(true);\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            iconStyle={classes.largeIcon}\r\n          >\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            <img src=\"https://i.ibb.co/Yc5RpxY/full-logo-white.png\" alt=\"logo\" className=\"logo\" />\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={9} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <Avatar className={classes.greenAvatar}>AB</Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper),\r\n        }}\r\n        open={open}\r\n      >\r\n        \r\n        <List>{mainListItems}</List>\r\n        \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Body />\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ContentStore","import React from 'react';\nimport './App.css';\nimport ContenStore from './ContentStore';\n\nfunction App() {\n  return (\n    <div>\n     <ContenStore />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}